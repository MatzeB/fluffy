typealias String = byte*

func extern malloc(size : unsigned int) : void*
func extern printf(format : String, ...) : int
func extern puts(val : String)

concept Printable<T>:
	func print(obj : T)

instance Printable String:
	func print(obj : String):
		puts(obj)

instance Printable int:
	func print(obj : int):
		printf("%d\n", obj)

struct ListElement<T>:
	val  : T
	next : ListElement<T>*

struct List<T>:
	first : ListElement<T>*

func AddToList<T>(list : List<T>*, element : ListElement<T>*):
	element.next = list.first
	list.first   = element

func AddMakeElement<T>(list : List<T>*, value : T):
	var element = cast<ListElement<T>*> malloc( sizeof<T> )
	element.val = value
	AddToList(list, element)

func PrintList<T : Printable>(list : List<T>*):
	var elem = list.first
	:beginloop
	if elem == null:
		return
	print(elem.val)
	elem = elem.next
	goto beginloop

instance Printable List<int>*:
	func print(obj : List<int>*):
		PrintList(obj)

instance Printable List<String>*:
	func print(obj : List<String>*):
		PrintList(obj)

func main() : int:
	var l : List<String>
	l.first = null
	var e1 : ListElement<String>
	e1.val = "Hallo"
	var e2 : ListElement<String>
	e2.val = "Welt"
	AddToList(&l, &e1)
	AddToList(&l, &e2)
	print(&l)

	var l2 : List<int>
	l2.first = null
	AddMakeElement(&l2, 42)
	AddMakeElement(&l2, 13)
	print(&l2)

	var l3 : List<List<int>*>
	l3.first = null
	PrintList(&l3)

	return 0
export main

