struct PixelFormat:

struct Palette:
	int       ncolors
	Color     colors

struct Color:
	byte      r
	byte      g
	byte      b
	byte      a

struct Surface:
	unsigned int   flags
	PixelFormat*   format
	int            w
	int            h
	unsigned short pitch
	void*          pixels
	int            offset
	void*          hwdata

	Rect           clip_rect

	unsigned int   unused1
	unsigned int   locked
	void*          map
	unsigned int   format_version
	int            refcount

struct Rect:
	short x
	short y
	unsigned short w
	unsigned short h

extern func int  SDL_Init(unsigned int flags)
extern func void SDL_Quit()
extern func byte* SDL_GetError()

extern func Surface* SDL_SetVideoMode(int width, int height, int bpp, int flags)
extern func int SDL_UpperBlit(Surface* src, Rect* srcrect, Surface* dest, Rect* destrect)
extern func int SDL_FillRect(Surface* dest, Rect* destrect, unsigned int color)
extern func Surface* IMG_Load(byte* filename)
extern func void SDL_FreeSurface(Surface* surface)
extern func void SDL_Delay(unsigned int ms)
extern func void* malloc(unsigned int size)
extern func void free(void* ptr)
extern func int SDL_Flip(Surface* screen)

extern func void print_int(int val)
extern func void print_string(byte * val)

func int main(int argc, byte * * argv):
	SDL_Init(cast<unsigned int> 0x0000FFFF)

	var image_count <- argc - 1
	var screen      <- SDL_SetVideoMode(640, 480, 0, 0)
	var filename    <- argv + cast<byte * * > 4
	var i           <- 0
	var rect        <- cast<Rect* > (malloc(cast<unsigned int> 8))

	print_int(screen.w)
	print_int(screen.h)

	:loop
	if i >= image_count:
		goto end

	print_string(*filename)
	var image <- IMG_Load(*filename)
	if image = cast<Surface* > 0:
		return 1
	
	SDL_FillRect(screen, cast<Rect* > 0, cast<unsigned int> 0)
	rect.x <- (screen.w - image.w) >> 1
	rect.y <- (screen.h - image.h) >> 1
	SDL_UpperBlit(image, cast<Rect* > 0, screen, rect)
	SDL_Flip(screen)

	SDL_Delay(cast<unsigned int> 1500)
	i        <- i + 1
	filename <- filename + cast<byte * * > 4
	goto loop

	:end

	free(cast<void* > rect)
	SDL_Quit()

	return 0

