/* TODO... doesn't work yet */
extern func void* malloc(unsigned int size)
extern func void print_int(int val)
extern func void puts(byte* val)

typeclass Ordered<T>:
	/* TODO use bool as return type... */
	func int less(T obj1, T obj2)

instance Ordered<int>:
	func int less(int obj1, int obj2):
		if obj1 < obj2:
			return 1
		return 0

typeclass Printable<T>:
	func void print(T obj)

instance Printable<byte* >:
	func void print(byte* obj):
		puts(obj)

instance Printable<int>:
	func void print(int obj):
		print_int(obj)

func void bubblesort<Ordered T> (T* array, int len):
	var sorted <- 1

	var i <- 0
	:loop
	if i >= len - 1:
		if sorted /= 1:
			bubblesort(array, len)
		return
	
	if array[i] > array[i+1]:
		var temp   <- array[i]
		array[i]   <- array[i+1]
		array[i+1] <- temp
		sorted     <- 0
	
	i <- i + 1
	goto loop

func void print_array<Printable T>(T* array, int len):
	var i <- 0
	:loop
	if i >= len:
		return

	print(array[i])
	
	i <- i + 1
	goto loop

/*
func void quicksort<Ordered Printable T> (T* array, int l, int r):
	print(array[l+r])
*/

func void printi<Printable T>(T obj):
	print(obj)

func int main():
	var array <- cast<int* > malloc(cast<unsigned int> 10 * __sizeof<int>)
	array[0] <- 20
	array[1] <- 10
	array[2] <- 5
	array[3] <- 89
	array[4] <- 24
	array[5] <- 43
	array[6] <- 13
	array[7] <- 99
	array[8] <- 66
	array[9] <- 5

	print("Initial array:")
	print_array(array, 10)
	
	bubblesort(array, 10)

	print("Sorted array:")
	print_array(array, 10)
	
	return 0

